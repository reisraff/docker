version: '3.4'

services:
  python2:
    image: reisraff/python2:latest
    container_name: python2
    build:
      context: ./containers/python
      args:
        PY_VERSION: 2.7
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    networks:
      - default

  python3:
    image: reisraff/python3:latest
    container_name: python3
    build:
      context: ./containers/python
      args:
        PY_VERSION: 3
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    networks:
      - default

  php:
    image: reisraff/php:latest
    container_name: php
    build:
      context: ./containers/php
      args:
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    ports:
      - "127.0.0.1:8000:8000"
      - "127.0.0.1:8080:8080"
    networks:
      - default

  javascript:
    image: reisraff/javascript:latest
    container_name: javascript
    build:
      context: ./containers/javascript
      args:
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - default
    privileged: true

  mysql:
    image: reisraff/mysql:latest
    container_name: mysql
    build:
      context: ./containers/mysql
      args:
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
      - MYSQL_PORT=3306
    ports:
      - "127.0.0.1:3306:3306"
    expose:
      - "3306"
    networks:
      default:
        aliases:
          - mysql.dockerlink

  postgres:
    image: reisraff/postgres:latest
    container_name: postgres
    build:
      context: ./containers/postgres
      args:
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      default:
        aliases:
          - postgres.dockerlink

  kali:
    image: reisraff/kali:latest
    container_name: kali
    build:
      context: ./containers/kali
      args:
        HOSTUSER: ${HOSTUSER:-docker}
        HOSTUID: ${HOSTUID:-1000}
        HOSTGID: ${HOSTGID:-1000}
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    networks:
      - default
    privileged: true

networks:
  default:
