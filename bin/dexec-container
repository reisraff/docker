#!/usr/bin/env python

import sys
import os
import re
import subprocess

help_message = """
EXEC-CONTAINER (docker exec insteadof docker-container exec)

Usage:
    {} [container-name]
"""

if 2 != len(sys.argv):
    sys.stderr.write(help_message.format(sys.argv[0]))
    sys.stderr.flush()
    sys.exit(1)

container_name = sys.argv[1]
docker_compose_bin_folder = os.path.dirname(os.path.realpath(__file__))
root_folder = os.path.dirname(docker_compose_bin_folder)
env_file = os.path.join(root_folder, '.env')

user = 'root'
if os.path.isfile(env_file):
    env_content = open(env_file, 'r').read().encode('utf8')
    user_result = re.findall('USER=(.*)', env_content)
    user = user_result[0] if len(user_result) else user

get_id = "docker ps | grep '{}/{}:latest' | awk '{{print $10}}'".format(user, container_name)
output = subprocess.check_output(get_id, shell=True).strip()

if len(output):
    command = 'docker exec -it {} bash'.format(output)
    os.system(command)
else:
    sys.stderr.write('There is no container named {} running\n'.format(container_name))
    sys.stderr.flush()
